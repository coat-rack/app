// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")()
const SpacesIndexLazyImport = createFileRoute("/spaces/")()
const AppsIdLazyImport = createFileRoute("/apps/$id")()
const AppsTodosIndexLazyImport = createFileRoute("/apps/todos/")()
const AppsNotesIndexLazyImport = createFileRoute("/apps/notes/")()
const AppsNotesIdLazyImport = createFileRoute("/apps/notes/$id")()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route))

const SpacesIndexLazyRoute = SpacesIndexLazyImport.update({
  path: "/spaces/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/spaces/index.lazy").then((d) => d.Route))

const AppsIdLazyRoute = AppsIdLazyImport.update({
  path: "/apps/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/apps/$id.lazy").then((d) => d.Route))

const AppsTodosIndexLazyRoute = AppsTodosIndexLazyImport.update({
  path: "/apps/todos/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/apps/todos/index.lazy").then((d) => d.Route),
)

const AppsNotesIndexLazyRoute = AppsNotesIndexLazyImport.update({
  path: "/apps/notes/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/apps/notes/index.lazy").then((d) => d.Route),
)

const AppsNotesIdLazyRoute = AppsNotesIdLazyImport.update({
  path: "/apps/notes/$id",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/apps/notes/$id.lazy").then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/apps/$id": {
      preLoaderRoute: typeof AppsIdLazyImport
      parentRoute: typeof rootRoute
    }
    "/spaces/": {
      preLoaderRoute: typeof SpacesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/apps/notes/$id": {
      preLoaderRoute: typeof AppsNotesIdLazyImport
      parentRoute: typeof rootRoute
    }
    "/apps/notes/": {
      preLoaderRoute: typeof AppsNotesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/apps/todos/": {
      preLoaderRoute: typeof AppsTodosIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AppsIdLazyRoute,
  SpacesIndexLazyRoute,
  AppsNotesIdLazyRoute,
  AppsNotesIndexLazyRoute,
  AppsTodosIndexLazyRoute,
])
